/*******************************************************************************/
/*                                                                             */
/*  Copyright 2004-2017 Pascal Gloor                                                */
/*                                                                             */
/*  Licensed under the Apache License, Version 2.0 (the "License");            */
/*  you may not use this file except in compliance with the License.           */
/*  You may obtain a copy of the License at                                    */
/*                                                                             */
/*     http://www.apache.org/licenses/LICENSE-2.0                              */
/*                                                                             */
/*  Unless required by applicable law or agreed to in writing, software        */
/*  distributed under the License is distributed on an "AS IS" BASIS,          */
/*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   */
/*  See the License for the specific language governing permissions and        */
/*  limitations under the License.                                             */
/*                                                                             */
/*******************************************************************************/


int   main(int argc, char *argv[]);
int   p_main_loop(void);
void *p_main_peer(void *data);
void  p_main_peer_exit(void *data, int sock);
void  p_main_peer_work(char *ibuf, char *obuf, int id);
void p_main_peer_open(int id, char *obuf);
void  p_main_peer_send(int id, char *obuf);
void  p_main_peer_loop(int id);
void  p_main_syntax(char *prog);
void  p_main_sighup(int sig);
int   mydaemon(int nochdir, int noclose);
int   mychown(char *path, uid_t uid, gid_t gid, int depth);

#ifdef DEBUG
const static char *bgp_origin[256] = { "IGP", "EGP", "UNKNOWN" };

const static char *bgp_path_attribute[256] = {
	"Reserved",
	"ORIGIN",
	"AS_PATH",
	"NEXT_HOP",
	"MULTI_EXIT_DISC",
	"LOCAL_PREF",
	"ATOMIC_AGGREGATE",
	"AGGREGATOR",
	"COMMUNITY",
	"ORIGINATOR_ID",
	"CLUSTER_LIST",
	"DPA (deprecated)",
	"ADVERTISER (historic, deprecated)",
	"RCID_PATH / CLUSTER_ID (historic, deprecated)",
	"MP_REACH_NLRI",
	"MP_UNREACH_NLRI",
	"EXTENDED COMMUNITIES",
	"AS4_PATH",
	"AS4_AGGREGATOR",
        "SAFI Specific Attribute (SSA) (deprecated)",
        "Connector Attribute (deprecated)",
        "AS_PATHLIMIT (deprecated)",
        "PMSI_TUNNEL",
        "Tunnel Encapsulation Attribute",
        "Traffic Engineering",
        "IPv6 Address Specific Extended Community",
        "AIGP",
        "PE Distinguisher Labels",
        "BGP Entropy Label Capability Attribute (deprecated)",
        "BGP-LS Attribute",
        "Deprecated",
        "Deprecated",
        "LARGE_COMMUNITY",
        "BGPsec_Path",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned" };

const static char *bgp_capability[256] = {
	"Reserved",
	"Multiprotocol Extensions for BGP-4",
	"Route Refresh Capability for BGP-4",
	"Outbound Route Filtering Capability",
	"Multiple routes to a destination capability (deprecated)",
	"Extended Next Hop Encoding",
	"BGP-Extended Message (TEMPORARY - registered 2015-09-30, extension registered 2017-08-31, expires 2018-09-30)",
	"BGPsec Capability",
	"Multiple Labels Capability",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Graceful Restart Capability",
	"Support for 4-octet AS number capability",
	"Deprecated (2003-03-06)",
	"Support for Dynamic Capability (capability specific)",
	"Multisession BGP Capability",
	"ADD-PATH Capability",
	"Enhanced Route Refresh Capability",
	"Long-Lived Graceful Restart (LLGR) Capability",
	"Unassigned",
	"FQDN Capability",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
	"Reserved (Private use)",
};

#endif
